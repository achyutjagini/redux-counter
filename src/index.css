* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
/*
This is a CSS code snippet that applies some styling rules to the body element 
of an HTML document.

The min-height property sets the minimum height of the body element to 100% of
the viewport height, ensuring that the element takes up at least the full height of the screen.

The font-size property sets the font size for all text content inside the body
element to 5 rem, which is a relative unit based on the font size of the root element.

The display property sets the display mode for the body element to grid, which 
allows it to be positioned using CSS grid layout.

The place-content property is a shorthand property for setting both align-content 
and justify-content properties of the CSS grid. In this case, it centers the
content of the body element both horizontally and vertically.

rem is a relative unit of length in CSS that stands for "root em". The font-size property set
 to 5rem means that the font size of all text content inside the body element will be se
 t to 5 times the font size of the root element.

For example, if the font-size of the root element is set to 16 pixels, then 5rem will be 
equivalent to 80px (5 * 16px). If the font-size of the root element is set to a 
different value, the 5rem will be calculated accordingly.
*/

body {
  min-height: 100vh;
  font-size: 5rem;
  display: grid;
  place-content: center;
}

input,
button {
  font: inherit;
  padding: 0.5rem;
}

/*
display: flex; sets the display property of the section element to flex, which turns the section element into a flex container.

flex-direction: column; sets the direction of the main axis in the flex container to be vertical, which means that the flex items inside the section will be stacked on top of each other from top to bottom.

justify-content: center; centers the flex items along the main axis, which is the axis to the one specified by the flex-direction property. In this case, 
it centers the items in the center of the section element.

align-items: center; centers the flex items 
along the cross axis, which is the horizon axis (if flex-direction is column)
as the one specified by the flex-direction property. 
In this case, it centers the items in the center of the section element.*/

section {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  /*place-content: center;*/
}

input {
  text-align: center;
  max-width: 2.5em;
}

button {
  font-size: 2rem;
  margin: 0.5em 0 0.5em 0.5em;
  min-width: 2em;
}

button:first-child {
  margin-left: 0;
}
